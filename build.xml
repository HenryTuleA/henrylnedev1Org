<project name="Henry of Salesforce Ant tasks" default="test" basedir="." xmlns:sf="antlib:com.salesforce">

    <property file="build.properties"/>
    <property environment="env"/>

    <!-- Setting default value for username, password and session id properties to empty string 
         so unset values are treated as empty. Without this, ant expressions such as ${sf.username}
         will be treated literally.
    -->
    <condition property="sf.username" value=""> <not> <isset property="sf.username"/> </not> </condition>
    <condition property="sf.password" value=""> <not> <isset property="sf.password"/> </not> </condition>
    <condition property="sf.sessionId" value=""> <not> <isset property="sf.sessionId"/> </not> </condition>

    <taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
        <classpath>
            <pathelement location="ant-salesforce.jar" />        	
        </classpath>
    </taskdef>
	
    <!-- Test out deploy and retrieve verbs for package 'mypkg' -->
    <target name="HENRYLNEDEV1Retrieve">
          <!-- Upload the contents of the "mypkg" package 
          <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="mypkg" rollbackOnError="true"/>
          <mkdir dir="retrieveOutput"/>  -->
          <!-- Retrieve the contents into another directory 
          <mkdir dir="HENRYLNEDEV1RETRIEVE"/> -->

          <sf:retrieve 
                username="${sf.username}" 
                password="${sf.password}" 
                serverurl="${sf.serverurl}" 
                maxPoll="${sf.maxPoll}" 
                retrieveTarget="henrylnedev1Org" 
                unpackaged="package.xml"    />
    </target>

    <macrodef name="git">
        <attribute name="command" />
        <attribute name="dir" default="${gt.Directory}" />
        <element name="args" optional="true" />
        <sequential>
          <echo message="git @{command}" />
          <exec executable="git" dir="@{dir}">
            <arg value="@{command}" />
          <args/>
          </exec>
        </sequential>
    </macrodef>
    

  <target name="GitOperations" description="Commits all changes to version git" depends="HENRYLNEDEV1Retrieve">

    <echo message="Commiting all changes with message ${gt.commitMessage}" /> 

    <git command="add">
      <args>
        <arg value="." />
      </args>
    </git>

    <git command="commit">
      <args>
        <arg value="-am ${gt.commitMessage}" />
      </args>
    </git>



    <git command="push">
      
    </git>
  </target>
</project>
